{"version":3,"sources":["components/StartButton.tsx","components/StopButton.tsx","components/SettingsContext.tsx","components/Timer.tsx","components/BackButton.tsx","components/Settings.tsx","components/Pomodoro.tsx","components/SettingsButton.tsx","components/Header.tsx","components/App.tsx","index.tsx"],"names":["StartButton","props","react_default","a","createElement","Object","assign","className","xmlns","viewBox","fill","fillRule","d","clipRule","StopButton","defaultISettings","showSettings","workMinutes","breakMinutes","setShowSettings","setWorkMinutes","setBreakMinutes","SettingsContext","React","createContext","Timer","settingsInfo","useContext","_useState","useState","_useState2","slicedToArray","isPaused","setIsPaused","_useState3","_useState4","mode","setMode","_useState5","_useState6","secondsLeft","setSecondsLeft","secondsLeftRef","useRef","isPausedRef","modeRef","useEffect","current","interval","setInterval","nextMode","nextSeconds","switchMode","clearInterval","totalSeconds","percentage","Math","round","minutes","floor","seconds","toString","index_esm","value","text","concat","styles","buildStyles","textColor","pathColor","trailColor","StartButton_StartButton","onClick","StopButton_StopButton","BackButton","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Settings","react_numeric_input_default","min","max","onChange","Number","BackButton_BackButton","Pomodoro","Settings_Settings","Timer_Timer","SettingsButton","Header","Audio","SettingsButton_SettingsButton","App","Provider","Header_Header","Pomodoro_Pomodoro","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.56047f1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const StartButton = (props: any): JSX.Element => {\r\n  return (\r\n    <button {...props} className='button'>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    </button>\r\n  )\r\n};","import React from 'react';\r\n\r\nexport const StopButton = (props: any): JSX.Element => {\r\n  return (\r\n    <button {...props} className='button'>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport interface ISettings {\r\n  showSettings: boolean;\r\n  workMinutes: number;\r\n  breakMinutes: number;\r\n  setShowSettings: (value: boolean) => void;\r\n  setWorkMinutes: (num: number) => void;\r\n  setBreakMinutes: (num: number) => void;\r\n}\r\n\r\nexport const defaultISettings: ISettings = {\r\n  showSettings: false,\r\n  workMinutes: 45,\r\n  breakMinutes: 15,\r\n  setShowSettings: () => null,\r\n  setWorkMinutes: () => null,\r\n  setBreakMinutes: () => null\r\n}\r\n\r\nexport const SettingsContext = React.createContext<ISettings>(defaultISettings);","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nimport { StartButton } from './StartButton';\r\nimport { StopButton } from './StopButton';\r\nimport { SettingsButton } from './SettingsButton';\r\nimport { ISettings, SettingsContext } from './SettingsContext';\r\n\r\nconst red = '#f54e4e';\r\nconst green = '#4aec8c'\r\n\r\nexport const Timer = (): JSX.Element => {\r\n  const settingsInfo = useContext<ISettings>(SettingsContext);\r\n\r\n  const [isPaused, setIsPaused] = useState<boolean>(true);\r\n  const [mode, setMode] = useState<string>('work');\r\n  const [secondsLeft, setSecondsLeft] = useState<number>(0);\r\n\r\n  const secondsLeftRef = useRef(secondsLeft);\r\n  const isPausedRef = useRef(isPaused);\r\n  const modeRef = useRef(mode);\r\n\r\n  const initTimer = () => {\r\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\r\n    setSecondsLeft(secondsLeftRef.current);\r\n  }\r\n\r\n  const switchMode = () => {\r\n    const nextMode = modeRef.current === 'work' ? 'break' : 'work';\r\n\r\n    const nextSeconds = (nextMode === 'work' ? settingsInfo.workMinutes * 60 : settingsInfo.breakMinutes * 60);\r\n    setMode(nextMode);\r\n    modeRef.current = nextMode;\r\n\r\n    setSecondsLeft(nextSeconds);\r\n    secondsLeftRef.current = nextSeconds;\r\n  }\r\n\r\n  const tick = () => {\r\n    secondsLeftRef.current--;\r\n    setSecondsLeft(secondsLeftRef.current);\r\n  }\r\n\r\n  useEffect(() => {\r\n    initTimer();\r\n\r\n    const interval = setInterval(() => {\r\n      if (isPausedRef.current) {\r\n        return;\r\n      }\r\n\r\n      if (secondsLeftRef.current === 0) {\r\n        return switchMode();\r\n      }\r\n\r\n      tick();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [settingsInfo]);\r\n\r\n  const totalSeconds = mode === 'work' ? settingsInfo.workMinutes * 60 : settingsInfo.breakMinutes * 60;\r\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\r\n\r\n  const minutes = Math.floor(secondsLeft / 60);\r\n  let seconds: number | string = secondsLeft % 60;\r\n  if (seconds < 10) seconds = '0' + seconds.toString();\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n        value={percentage}\r\n        text={`${minutes}:${seconds}`}\r\n        styles={buildStyles({\r\n          textColor: '#fff',\r\n          pathColor: mode === 'work' ? red : green,\r\n          trailColor: 'rgba(255,255,255,.2)'\r\n        })}\r\n      />\r\n      <div className='center margin-top-sm'>\r\n        {isPaused\r\n          ? <StartButton onClick={() => { setIsPaused(false); isPausedRef.current = false; }} />\r\n          : <StopButton onClick={() => { setIsPaused(true); isPausedRef.current = true; }} />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport const BackButton = (props: any): JSX.Element => {\r\n  return (\r\n    <button {...props} className='button margin-top-sm'>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n};","import React, { useContext } from 'react';\r\nimport ReactSlider from 'react-slider';\r\nimport { ISettings, SettingsContext } from './SettingsContext';\r\nimport { BackButton } from './BackButton';\r\n\r\nimport NumericInput from 'react-numeric-input';\r\n\r\nexport const Settings = (): JSX.Element => {\r\n  const settingsInfo = useContext<ISettings>(SettingsContext);\r\n\r\n  return (\r\n    <div className='settings-container'>\r\n      <div className='numerics-container'>\r\n        <div className='numeric-container'>\r\n          <label className='settings-label'>Work: {settingsInfo.workMinutes}:00</label>\r\n          <NumericInput\r\n            min={1}\r\n            max={120}\r\n            value={settingsInfo.workMinutes}\r\n            onChange={(value) => settingsInfo.setWorkMinutes(Number(value))}\r\n          />\r\n        </div>\r\n\r\n        <div className='numeric-container'>\r\n          <label className='settings-label'>Break: {settingsInfo.breakMinutes}:00</label>\r\n          <NumericInput\r\n            min={1}\r\n            max={60}\r\n            value={settingsInfo.breakMinutes}\r\n            onChange={(value) => settingsInfo.setBreakMinutes(Number(value))}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <BackButton\r\n        onClick={() => settingsInfo.setShowSettings(false)}\r\n      />\r\n    </div>\r\n  );\r\n};","import React, { useContext } from 'react';\r\nimport { Timer } from './Timer';\r\n\r\nimport { Settings } from './Settings';\r\nimport { ISettings, SettingsContext } from './SettingsContext';\r\n\r\nexport const Pomodoro = (): JSX.Element => {\r\n  const settingsInfo = useContext<ISettings>(SettingsContext);\r\n\r\n  return (\r\n    <div className='container center' >\r\n      {settingsInfo.showSettings ? <Settings /> : <Timer />}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport const SettingsButton = (props: any): JSX.Element => {\r\n  return (\r\n    <button {...props} className='button-settings'>\r\n      <svg xmlns=\"http://www.w3.org /2000/svg\" className=\"h-5 w-5 settings-svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n        <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n      <p>Settings</p>\r\n    </button>\r\n  );\r\n};","import React, { useContext } from 'react';\r\n\r\nimport { SettingsButton } from './SettingsButton';\r\nimport { ISettings, SettingsContext } from './SettingsContext';\r\n\r\nexport const Header = (): JSX.Element => {\r\n  const settingsInfo = useContext<ISettings>(SettingsContext);\r\n\r\n  const startAudio = new Audio(\"../sounds/song.mp3\");\r\n\r\n  return (\r\n    <div className='header'>\r\n      <div>\r\n        <h1 className='header-first'>Pomo</h1>\r\n        <div className='clock-container'>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 clock-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </div>\r\n        <h1 className='header-first'>Doro</h1>\r\n      </div>\r\n      <div>\r\n        <SettingsButton\r\n          onClick={() => settingsInfo.showSettings ? settingsInfo.setShowSettings(false) : settingsInfo.setShowSettings(true)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\n\r\nimport '../App.css';\r\n\r\nimport { Pomodoro } from './Pomodoro';\r\nimport { Header } from './Header';\r\nimport { SettingsContext } from './SettingsContext';\r\n\r\nimport { defaultISettings } from './SettingsContext';\r\n\r\nexport const App = (): JSX.Element => {\r\n  const [showSettings, setShowSettings] = useState<boolean>(defaultISettings.showSettings);\r\n  const [workMinutes, setWorkMinutes] = useState<number>(defaultISettings.workMinutes);\r\n  const [breakMinutes, setBreakMinutes] = useState<number>(defaultISettings.breakMinutes);\r\n\r\n  return (\r\n    <div>\r\n      <SettingsContext.Provider value={{\r\n        showSettings,\r\n        workMinutes,\r\n        breakMinutes,\r\n        setShowSettings,\r\n        setWorkMinutes,\r\n        setBreakMinutes\r\n      }}>\r\n        <Header />\r\n        <Pomodoro />\r\n      </SettingsContext.Provider>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}